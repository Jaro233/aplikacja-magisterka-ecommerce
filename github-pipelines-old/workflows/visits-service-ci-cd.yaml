name: visits-service CI/CD Pipeline

on:
  push:
    branches: [main]
    paths:
      - spring-petclinic-visits-service/**
  pull_request:
    branches: [main]
    paths:
      - spring-petclinic-visits-service/**

env:
  # Credentials for AWS
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  # spring-petclinic-visits-service path and name
  APP_PATH: ./spring-petclinic-visits-service
  APP_NAME: spring-petclinic-visits-service
  APP_NAME_SHORT: visits-service
  SONAR_PROJECT_KEY: jaro233_spring-petclinic-visits-service
  # ecr repo
  ECR_REPO_NAME: my-ecr
  NAMESPACE: spring-petclinic
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_VISITS_SERVICE }}
  SLACK_WEBHOOK_URL: ${{secrets.VISITS_SERVICE_SLACK_WEBHOOK}}
  INTEGRATION_TEST_SPEC: cypress/e2e/addVisit.cy.js

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Java 11
        uses: actions/setup-java@v4
        with:
          distribution: "adopt" # See 'Supported distributions' for available options
          java-version: "11"
          cache: "maven"
          cache-dependency-path: "${{env.APP_PATH}}/pom.xml"

      - name: Notify Slack on Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              "attachments": [{
                "color": "danger",
                "text": "Job for ${{ env.APP_NAME_SHORT }} failed :x:"
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}

  integration_tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Java 11
        uses: actions/setup-java@v4
        with:
          distribution: "adopt" # See 'Supported distributions' for available options
          java-version: "11"
          cache: "maven"
          cache-dependency-path: "${{env.APP_PATH}}/pom.xml"

      - name: Run tests
        run: cd ${{env.APP_PATH}} && mvn test

      - name: Notify Slack on Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              "attachments": [{
                "color": "danger",
                "text": "Job for ${{ env.APP_NAME_SHORT }} failed :x:"
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}

  code_quality_and_security_scanning:
    runs-on: ubuntu-latest
    needs: integration_tests
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "17"

      - name: Run OWASP Dependency Check
        run: |
          # Download and unzip Dependency-Check
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v9.0.9/dependency-check-9.0.9-release.zip
          unzip dependency-check-9.0.9-release.zip

          # Run Dependency-Check
          ./dependency-check/bin/dependency-check.sh --project "${{env.APP_NAME}}" --scan "${{env.APP_PATH}}" --nvdApiKey "${{ secrets.NVD_API_KEY }}" --format "HTML" --out "${{env.APP_PATH}}/reports"

      - name: Upload Dependency Check Report
        uses: actions/upload-artifact@v2
        with:
          name: dependency-check-report
          path: ${{env.APP_PATH}}/reports/dependency-check-report.html

      - name: Run SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd ${{env.APP_PATH}} && mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=${{env.SONAR_PROJECT_KEY}} \
          -Dsonar.organization=jaro233 \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ env.SONAR_TOKEN }} \
          -Dsonar.qualitygate.wait=true \
          -Dsonar.dependencyCheck.reportPath=.${{env.APP_PATH}}/reports/dependency-check-report.html

      - name: Notify Slack on Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              "attachments": [{
                "color": "danger",
                "text": "Job for ${{ env.APP_NAME_SHORT }} failed :x:"
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}

  build_and_push:
    runs-on: ubuntu-latest
    outputs:
      ecr-registry: ${{ steps.login-ecr-private.outputs.registry }}
    needs: code_quality_and_security_scanning
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Java 11
        uses: actions/setup-java@v4
        with:
          distribution: "adopt" # See 'Supported distributions' for available options
          java-version: "11"
          cache: "maven"
          cache-dependency-path: "${{env.APP_PATH}}/pom.xml"

      - name: Build artifact
        run: cd ${{env.APP_PATH}} && mvn clean install -DskipTests

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR Private
        id: login-ecr-private
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: private

      - name: Build and push Docker image to ECR
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile
          build-args: |
            ARTIFACT_NAME=${{env.APP_PATH}}/target/${{env.APP_NAME_SHORT}}.jar
            DOCKERIZE_VERSION=v0.7.0
            EXPOSED_PORT=8080
          tags: ${{ steps.login-ecr-private.outputs.registry }}/${{env.ECR_REPO_NAME}}:1.${{ github.run_number }}
          push: true

      - name: Notify Slack on Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              "attachments": [{
                "color": "danger",
                "text": "Job for ${{ env.APP_NAME_SHORT }} failed :x:"
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}

  docker_image_scanning:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR Private
        id: login-ecr-private
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: private

      - name: Scan the Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.login-ecr-private.outputs.registry }}/${{env.ECR_REPO_NAME}}:1.${{ github.run_number }}
          format: "table"
          exit-code: "0"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

      - name: Notify Slack on Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              "attachments": [{
                "color": "danger",
                "text": "Job for ${{ env.APP_NAME_SHORT }} failed :x:"
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}

  deployment:
    concurrency:
      group: deployment-${{ github.ref }}
      cancel-in-progress: false
    runs-on: ubuntu-latest
    needs: docker_image_scanning
    # needs: build_and_push
    permissions:
      issues: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR Private
        id: login-ecr-private
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: private

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Install Dependencies for Integration Tests
        run: cd cypress && npm install

      - name: Set up Kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ secrets.CLUSTER_NAME }}

      - name: Deploy to Staging
        env:
          DEPLOY_ONLY: "true"
          NAMESPACE: ${{env.NAMESPACE}}
          ECR_REGISTRY: ${{ steps.login-ecr-private.outputs.registry }}
          ECR_REPO_NAME: ${{env.ECR_REPO_NAME}}
          REPOSITORY_TAG: ${{github.run_number}}
          APP_NAME_SHORT: ${{env.APP_NAME_SHORT}}
        run: bash ./scripts/backendBlueGreenDeployment.sh

      - name: Check if all stage pods are running
        run: bash ./scripts/checkAllStagePodsRunning.sh

      - name: Run Integration Tests
        uses: cypress-io/github-action@v6
        with:
          wait-on-timeout: 10
          config: video=false
          browser: chrome
          spec: ${{env.INTEGRATION_TEST_SPEC}}
          working-directory: cypress
        env:
          CYPRESS_BASE_URL: "https://stage.devopshub.org"

      - name: Swap Production to New Version
        if: success() # Only proceed if tests pass
        env:
          DEPLOY_ONLY: "false"
          NAMESPACE: ${{env.NAMESPACE}}
          ECR_REGISTRY: ${{ steps.login-ecr-private.outputs.registry }}
          ECR_REPO_NAME: ${{env.ECR_REPO_NAME}}
          REPOSITORY_TAG: ${{github.run_number}}
          APP_NAME_SHORT: ${{env.APP_NAME_SHORT}}
        run: bash ./scripts/backendBlueGreenDeployment.sh

      - name: Notify Slack on Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              "attachments": [{
                "color": "danger",
                "text": "Job for ${{ env.APP_NAME_SHORT }} failed :x:"
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}

  zap-scan:
    runs-on: ubuntu-latest
    needs: deployment
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.9.0
        with:
          target: "https://prod.devopshub.org"
          allow_issue_writing: false

      - name: Notify Slack on Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              "attachments": [{
                "color": "danger",
                "text": "Job for ${{ env.APP_NAME_SHORT }} failed :x:"
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}

  cypress-run:
    runs-on: ubuntu-latest
    needs: zap-scan
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: cd cypress && npm install

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          wait-on-timeout: 10
          config: video=false
          browser: chrome
          working-directory: cypress

      - name: Notify Slack on Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              "attachments": [{
                "color": "danger",
                "text": "Job for ${{ env.APP_NAME_SHORT }} failed :x:"
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on Success
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              "attachments": [{
                "color": "good",
                "text": "Pipeline for ${{ env.APP_NAME_SHORT }} succeeded :white_check_mark:"
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}
