apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.microservice.name}}-green
  labels:
    app: {{.Values.microservice.name}}
  namespace: {{.Values.microservice.namespace}}
spec:
  replicas: {{.Values.microservice.replicaCount}}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0%
  selector:
    matchLabels:
      app: {{.Values.microservice.name}}
      slot: green
  template:
    metadata:
      labels:
        app: {{.Values.microservice.name}}
        slot: green
        env: {{.Values.microservice.current_environment_green}}
    spec:
      containers:
        - name: {{.Values.microservice.name}}
          image: "{{ .Values.microservice.image.repository_green }}:{{ .Values.microservice.image.tag_green }}"
          resources:
            limits:
              cpu: {{.Values.microservice.resources.limits.cpu}}
              memory: {{.Values.microservice.resources.limits.memory}}
            requests:
              cpu: {{.Values.microservice.resources.requests.cpu}}
              memory: {{.Values.microservice.resources.requests.memory}}
          ports:
            - containerPort: {{.Values.microservice.containerPort}}
          env:
            - name: REACT_APP_USER_SERVICE_URL
              value: {{.Values.env_vars.REACT_APP_USER_SERVICE_URL_GREEN}}
            - name: REACT_APP_PRODUCT_SERVICE_URL
              value: {{.Values.env_vars.REACT_APP_PRODUCT_SERVICE_URL_GREEN}}
            - name: REACT_APP_ORDER_SERVICE_URL
              value: {{.Values.env_vars.REACT_APP_ORDER_SERVICE_URL_GREEN}}
            - name: REACT_APP_CART_SERVICE_URL
              value: {{.Values.env_vars.REACT_APP_CART_SERVICE_URL_GREEN}}
          {{- if .Values.microservice.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.microservice.containerPort }}
            initialDelaySeconds: {{ .Values.microservice.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.microservice.livenessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.microservice.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.microservice.containerPort }}
            initialDelaySeconds: {{ .Values.microservice.readinessProbe.initialDelaySeconds }}
          {{- end }}
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 10"]
